(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-vendors~2b11ef5a"],{"722e":function(t,e,a){"use strict";var n=a("dde0"),r=a("6b82"),o=a("ae9b"),c=a("1a5d"),u=a("c937"),s=a("e2a6"),i=a("b8b5"),f=a("d767"),O=a("e2aa");function y(t,e,a,n,r,o,u,s,i,f,O,y,b,l,p,j){this[0]=Object(c["a"])(t,0),this[1]=Object(c["a"])(r,0),this[2]=Object(c["a"])(i,0),this[3]=Object(c["a"])(b,0),this[4]=Object(c["a"])(e,0),this[5]=Object(c["a"])(o,0),this[6]=Object(c["a"])(f,0),this[7]=Object(c["a"])(l,0),this[8]=Object(c["a"])(a,0),this[9]=Object(c["a"])(u,0),this[10]=Object(c["a"])(O,0),this[11]=Object(c["a"])(p,0),this[12]=Object(c["a"])(n,0),this[13]=Object(c["a"])(s,0),this[14]=Object(c["a"])(y,0),this[15]=Object(c["a"])(j,0)}y.packedLength=16,y.pack=function(t,e,a){return o["a"].typeOf.object("value",t),o["a"].defined("array",e),a=Object(c["a"])(a,0),e[a++]=t[0],e[a++]=t[1],e[a++]=t[2],e[a++]=t[3],e[a++]=t[4],e[a++]=t[5],e[a++]=t[6],e[a++]=t[7],e[a++]=t[8],e[a++]=t[9],e[a++]=t[10],e[a++]=t[11],e[a++]=t[12],e[a++]=t[13],e[a++]=t[14],e[a]=t[15],e},y.unpack=function(t,e,a){return o["a"].defined("array",t),e=Object(c["a"])(e,0),Object(u["a"])(a)||(a=new y),a[0]=t[e++],a[1]=t[e++],a[2]=t[e++],a[3]=t[e++],a[4]=t[e++],a[5]=t[e++],a[6]=t[e++],a[7]=t[e++],a[8]=t[e++],a[9]=t[e++],a[10]=t[e++],a[11]=t[e++],a[12]=t[e++],a[13]=t[e++],a[14]=t[e++],a[15]=t[e],a},y.packArray=function(t,e){o["a"].defined("array",t);const a=t.length,n=16*a;if(Object(u["a"])(e)){if(!Array.isArray(e)&&e.length!==n)throw new s["a"]("If result is a typed array, it must have exactly array.length * 16 elements");e.length!==n&&(e.length=n)}else e=new Array(n);for(let r=0;r<a;++r)y.pack(t[r],e,16*r);return e},y.unpackArray=function(t,e){if(o["a"].defined("array",t),o["a"].typeOf.number.greaterThanOrEquals("array.length",t.length,16),t.length%16!==0)throw new s["a"]("array length must be a multiple of 16.");const a=t.length;Object(u["a"])(e)?e.length=a/16:e=new Array(a/16);for(let n=0;n<a;n+=16){const a=n/16;e[a]=y.unpack(t,n,e[a])}return e},y.clone=function(t,e){if(Object(u["a"])(t))return Object(u["a"])(e)?(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e):new y(t[0],t[4],t[8],t[12],t[1],t[5],t[9],t[13],t[2],t[6],t[10],t[14],t[3],t[7],t[11],t[15])},y.fromArray=y.unpack,y.fromColumnMajorArray=function(t,e){return o["a"].defined("values",t),y.clone(t,e)},y.fromRowMajorArray=function(t,e){return o["a"].defined("values",t),Object(u["a"])(e)?(e[0]=t[0],e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=t[1],e[5]=t[5],e[6]=t[9],e[7]=t[13],e[8]=t[2],e[9]=t[6],e[10]=t[10],e[11]=t[14],e[12]=t[3],e[13]=t[7],e[14]=t[11],e[15]=t[15],e):new y(t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8],t[9],t[10],t[11],t[12],t[13],t[14],t[15])},y.fromRotationTranslation=function(t,e,a){return o["a"].typeOf.object("rotation",t),e=Object(c["a"])(e,n["a"].ZERO),Object(u["a"])(a)?(a[0]=t[0],a[1]=t[1],a[2]=t[2],a[3]=0,a[4]=t[3],a[5]=t[4],a[6]=t[5],a[7]=0,a[8]=t[6],a[9]=t[7],a[10]=t[8],a[11]=0,a[12]=e.x,a[13]=e.y,a[14]=e.z,a[15]=1,a):new y(t[0],t[3],t[6],e.x,t[1],t[4],t[7],e.y,t[2],t[5],t[8],e.z,0,0,0,1)},y.fromTranslationQuaternionRotationScale=function(t,e,a,n){o["a"].typeOf.object("translation",t),o["a"].typeOf.object("rotation",e),o["a"].typeOf.object("scale",a),Object(u["a"])(n)||(n=new y);const r=a.x,c=a.y,s=a.z,i=e.x*e.x,f=e.x*e.y,O=e.x*e.z,b=e.x*e.w,l=e.y*e.y,p=e.y*e.z,j=e.y*e.w,m=e.z*e.z,h=e.z*e.w,x=e.w*e.w,g=i-l-m+x,d=2*(f-h),w=2*(O+j),M=2*(f+h),E=-i+l-m+x,z=2*(p-b),T=2*(O-j),q=2*(p+b),R=-i-l+m+x;return n[0]=g*r,n[1]=M*r,n[2]=T*r,n[3]=0,n[4]=d*c,n[5]=E*c,n[6]=q*c,n[7]=0,n[8]=w*s,n[9]=z*s,n[10]=R*s,n[11]=0,n[12]=t.x,n[13]=t.y,n[14]=t.z,n[15]=1,n},y.fromTranslationRotationScale=function(t,e){return o["a"].typeOf.object("translationRotationScale",t),y.fromTranslationQuaternionRotationScale(t.translation,t.rotation,t.scale,e)},y.fromTranslation=function(t,e){return o["a"].typeOf.object("translation",t),y.fromRotationTranslation(f["a"].IDENTITY,t,e)},y.fromScale=function(t,e){return o["a"].typeOf.object("scale",t),Object(u["a"])(e)?(e[0]=t.x,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=t.y,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=t.z,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e):new y(t.x,0,0,0,0,t.y,0,0,0,0,t.z,0,0,0,0,1)},y.fromUniformScale=function(t,e){return o["a"].typeOf.number("scale",t),Object(u["a"])(e)?(e[0]=t,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=t,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=t,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e):new y(t,0,0,0,0,t,0,0,0,0,t,0,0,0,0,1)},y.fromRotation=function(t,e){return o["a"].typeOf.object("rotation",t),Object(u["a"])(e)||(e=new y),e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=0,e[4]=t[3],e[5]=t[4],e[6]=t[5],e[7]=0,e[8]=t[6],e[9]=t[7],e[10]=t[8],e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e};const b=new n["a"],l=new n["a"],p=new n["a"];y.fromCamera=function(t,e){o["a"].typeOf.object("camera",t);const a=t.position,r=t.direction,c=t.up;o["a"].typeOf.object("camera.position",a),o["a"].typeOf.object("camera.direction",r),o["a"].typeOf.object("camera.up",c),n["a"].normalize(r,b),n["a"].normalize(n["a"].cross(b,c,l),l),n["a"].normalize(n["a"].cross(l,b,p),p);const s=l.x,i=l.y,f=l.z,O=b.x,j=b.y,m=b.z,h=p.x,x=p.y,g=p.z,d=a.x,w=a.y,M=a.z,E=s*-d+i*-w+f*-M,z=h*-d+x*-w+g*-M,T=O*d+j*w+m*M;return Object(u["a"])(e)?(e[0]=s,e[1]=h,e[2]=-O,e[3]=0,e[4]=i,e[5]=x,e[6]=-j,e[7]=0,e[8]=f,e[9]=g,e[10]=-m,e[11]=0,e[12]=E,e[13]=z,e[14]=T,e[15]=1,e):new y(s,i,f,E,h,x,g,z,-O,-j,-m,T,0,0,0,1)},y.computePerspectiveFieldOfView=function(t,e,a,n,r){o["a"].typeOf.number.greaterThan("fovY",t,0),o["a"].typeOf.number.lessThan("fovY",t,Math.PI),o["a"].typeOf.number.greaterThan("near",a,0),o["a"].typeOf.number.greaterThan("far",n,0),o["a"].typeOf.object("result",r);const c=Math.tan(.5*t),u=1/c,s=u/e,i=(n+a)/(a-n),f=2*n*a/(a-n);return r[0]=s,r[1]=0,r[2]=0,r[3]=0,r[4]=0,r[5]=u,r[6]=0,r[7]=0,r[8]=0,r[9]=0,r[10]=i,r[11]=-1,r[12]=0,r[13]=0,r[14]=f,r[15]=0,r},y.computeOrthographicOffCenter=function(t,e,a,n,r,c,u){o["a"].typeOf.number("left",t),o["a"].typeOf.number("right",e),o["a"].typeOf.number("bottom",a),o["a"].typeOf.number("top",n),o["a"].typeOf.number("near",r),o["a"].typeOf.number("far",c),o["a"].typeOf.object("result",u);let s=1/(e-t),i=1/(n-a),f=1/(c-r);const O=-(e+t)*s,y=-(n+a)*i,b=-(c+r)*f;return s*=2,i*=2,f*=-2,u[0]=s,u[1]=0,u[2]=0,u[3]=0,u[4]=0,u[5]=i,u[6]=0,u[7]=0,u[8]=0,u[9]=0,u[10]=f,u[11]=0,u[12]=O,u[13]=y,u[14]=b,u[15]=1,u},y.computePerspectiveOffCenter=function(t,e,a,n,r,c,u){o["a"].typeOf.number("left",t),o["a"].typeOf.number("right",e),o["a"].typeOf.number("bottom",a),o["a"].typeOf.number("top",n),o["a"].typeOf.number("near",r),o["a"].typeOf.number("far",c),o["a"].typeOf.object("result",u);const s=2*r/(e-t),i=2*r/(n-a),f=(e+t)/(e-t),O=(n+a)/(n-a),y=-(c+r)/(c-r),b=-1,l=-2*c*r/(c-r);return u[0]=s,u[1]=0,u[2]=0,u[3]=0,u[4]=0,u[5]=i,u[6]=0,u[7]=0,u[8]=f,u[9]=O,u[10]=y,u[11]=b,u[12]=0,u[13]=0,u[14]=l,u[15]=0,u},y.computeInfinitePerspectiveOffCenter=function(t,e,a,n,r,c){o["a"].typeOf.number("left",t),o["a"].typeOf.number("right",e),o["a"].typeOf.number("bottom",a),o["a"].typeOf.number("top",n),o["a"].typeOf.number("near",r),o["a"].typeOf.object("result",c);const u=2*r/(e-t),s=2*r/(n-a),i=(e+t)/(e-t),f=(n+a)/(n-a),O=-1,y=-1,b=-2*r;return c[0]=u,c[1]=0,c[2]=0,c[3]=0,c[4]=0,c[5]=s,c[6]=0,c[7]=0,c[8]=i,c[9]=f,c[10]=O,c[11]=y,c[12]=0,c[13]=0,c[14]=b,c[15]=0,c},y.computeViewportTransformation=function(t,e,a,n){Object(u["a"])(n)||(n=new y),t=Object(c["a"])(t,c["a"].EMPTY_OBJECT);const r=Object(c["a"])(t.x,0),o=Object(c["a"])(t.y,0),s=Object(c["a"])(t.width,0),i=Object(c["a"])(t.height,0);e=Object(c["a"])(e,0),a=Object(c["a"])(a,1);const f=.5*s,O=.5*i,b=.5*(a-e),l=f,p=O,j=b,m=r+f,h=o+O,x=e+b,g=1;return n[0]=l,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=p,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=j,n[11]=0,n[12]=m,n[13]=h,n[14]=x,n[15]=g,n},y.computeView=function(t,e,a,r,c){return o["a"].typeOf.object("position",t),o["a"].typeOf.object("direction",e),o["a"].typeOf.object("up",a),o["a"].typeOf.object("right",r),o["a"].typeOf.object("result",c),c[0]=r.x,c[1]=a.x,c[2]=-e.x,c[3]=0,c[4]=r.y,c[5]=a.y,c[6]=-e.y,c[7]=0,c[8]=r.z,c[9]=a.z,c[10]=-e.z,c[11]=0,c[12]=-n["a"].dot(r,t),c[13]=-n["a"].dot(a,t),c[14]=n["a"].dot(e,t),c[15]=1,c},y.toArray=function(t,e){return o["a"].typeOf.object("matrix",t),Object(u["a"])(e)?(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e):[t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8],t[9],t[10],t[11],t[12],t[13],t[14],t[15]]},y.getElementIndex=function(t,e){return o["a"].typeOf.number.greaterThanOrEquals("row",e,0),o["a"].typeOf.number.lessThanOrEquals("row",e,3),o["a"].typeOf.number.greaterThanOrEquals("column",t,0),o["a"].typeOf.number.lessThanOrEquals("column",t,3),4*t+e},y.getColumn=function(t,e,a){o["a"].typeOf.object("matrix",t),o["a"].typeOf.number.greaterThanOrEquals("index",e,0),o["a"].typeOf.number.lessThanOrEquals("index",e,3),o["a"].typeOf.object("result",a);const n=4*e,r=t[n],c=t[n+1],u=t[n+2],s=t[n+3];return a.x=r,a.y=c,a.z=u,a.w=s,a},y.setColumn=function(t,e,a,n){o["a"].typeOf.object("matrix",t),o["a"].typeOf.number.greaterThanOrEquals("index",e,0),o["a"].typeOf.number.lessThanOrEquals("index",e,3),o["a"].typeOf.object("cartesian",a),o["a"].typeOf.object("result",n),n=y.clone(t,n);const r=4*e;return n[r]=a.x,n[r+1]=a.y,n[r+2]=a.z,n[r+3]=a.w,n},y.getRow=function(t,e,a){o["a"].typeOf.object("matrix",t),o["a"].typeOf.number.greaterThanOrEquals("index",e,0),o["a"].typeOf.number.lessThanOrEquals("index",e,3),o["a"].typeOf.object("result",a);const n=t[e],r=t[e+4],c=t[e+8],u=t[e+12];return a.x=n,a.y=r,a.z=c,a.w=u,a},y.setRow=function(t,e,a,n){return o["a"].typeOf.object("matrix",t),o["a"].typeOf.number.greaterThanOrEquals("index",e,0),o["a"].typeOf.number.lessThanOrEquals("index",e,3),o["a"].typeOf.object("cartesian",a),o["a"].typeOf.object("result",n),n=y.clone(t,n),n[e]=a.x,n[e+4]=a.y,n[e+8]=a.z,n[e+12]=a.w,n},y.setTranslation=function(t,e,a){return o["a"].typeOf.object("matrix",t),o["a"].typeOf.object("translation",e),o["a"].typeOf.object("result",a),a[0]=t[0],a[1]=t[1],a[2]=t[2],a[3]=t[3],a[4]=t[4],a[5]=t[5],a[6]=t[6],a[7]=t[7],a[8]=t[8],a[9]=t[9],a[10]=t[10],a[11]=t[11],a[12]=e.x,a[13]=e.y,a[14]=e.z,a[15]=t[15],a};const j=new n["a"];y.setScale=function(t,e,a){o["a"].typeOf.object("matrix",t),o["a"].typeOf.object("scale",e),o["a"].typeOf.object("result",a);const n=y.getScale(t,j),r=e.x/n.x,c=e.y/n.y,u=e.z/n.z;return a[0]=t[0]*r,a[1]=t[1]*r,a[2]=t[2]*r,a[3]=t[3],a[4]=t[4]*c,a[5]=t[5]*c,a[6]=t[6]*c,a[7]=t[7],a[8]=t[8]*u,a[9]=t[9]*u,a[10]=t[10]*u,a[11]=t[11],a[12]=t[12],a[13]=t[13],a[14]=t[14],a[15]=t[15],a};const m=new n["a"];y.setUniformScale=function(t,e,a){o["a"].typeOf.object("matrix",t),o["a"].typeOf.number("scale",e),o["a"].typeOf.object("result",a);const n=y.getScale(t,m),r=e/n.x,c=e/n.y,u=e/n.z;return a[0]=t[0]*r,a[1]=t[1]*r,a[2]=t[2]*r,a[3]=t[3],a[4]=t[4]*c,a[5]=t[5]*c,a[6]=t[6]*c,a[7]=t[7],a[8]=t[8]*u,a[9]=t[9]*u,a[10]=t[10]*u,a[11]=t[11],a[12]=t[12],a[13]=t[13],a[14]=t[14],a[15]=t[15],a};const h=new n["a"];y.getScale=function(t,e){return o["a"].typeOf.object("matrix",t),o["a"].typeOf.object("result",e),e.x=n["a"].magnitude(n["a"].fromElements(t[0],t[1],t[2],h)),e.y=n["a"].magnitude(n["a"].fromElements(t[4],t[5],t[6],h)),e.z=n["a"].magnitude(n["a"].fromElements(t[8],t[9],t[10],h)),e};const x=new n["a"];y.getMaximumScale=function(t){return y.getScale(t,x),n["a"].maximumComponent(x)};const g=new n["a"];y.setRotation=function(t,e,a){o["a"].typeOf.object("matrix",t),o["a"].typeOf.object("result",a);const n=y.getScale(t,g);return a[0]=e[0]*n.x,a[1]=e[1]*n.x,a[2]=e[2]*n.x,a[3]=t[3],a[4]=e[3]*n.y,a[5]=e[4]*n.y,a[6]=e[5]*n.y,a[7]=t[7],a[8]=e[6]*n.z,a[9]=e[7]*n.z,a[10]=e[8]*n.z,a[11]=t[11],a[12]=t[12],a[13]=t[13],a[14]=t[14],a[15]=t[15],a};const d=new n["a"];y.getRotation=function(t,e){o["a"].typeOf.object("matrix",t),o["a"].typeOf.object("result",e);const a=y.getScale(t,d);return e[0]=t[0]/a.x,e[1]=t[1]/a.x,e[2]=t[2]/a.x,e[3]=t[4]/a.y,e[4]=t[5]/a.y,e[5]=t[6]/a.y,e[6]=t[8]/a.z,e[7]=t[9]/a.z,e[8]=t[10]/a.z,e},y.multiply=function(t,e,a){o["a"].typeOf.object("left",t),o["a"].typeOf.object("right",e),o["a"].typeOf.object("result",a);const n=t[0],r=t[1],c=t[2],u=t[3],s=t[4],i=t[5],f=t[6],O=t[7],y=t[8],b=t[9],l=t[10],p=t[11],j=t[12],m=t[13],h=t[14],x=t[15],g=e[0],d=e[1],w=e[2],M=e[3],E=e[4],z=e[5],T=e[6],q=e[7],R=e[8],S=e[9],C=e[10],L=e[11],N=e[12],U=e[13],I=e[14],A=e[15],v=n*g+s*d+y*w+j*M,k=r*g+i*d+b*w+m*M,W=c*g+f*d+l*w+h*M,$=u*g+O*d+p*w+x*M,B=n*E+s*z+y*T+j*q,P=r*E+i*z+b*T+m*q,Y=c*E+f*z+l*T+h*q,D=u*E+O*z+p*T+x*q,V=n*R+s*S+y*C+j*L,Z=r*R+i*S+b*C+m*L,J=c*R+f*S+l*C+h*L,Q=u*R+O*S+p*C+x*L,F=n*N+s*U+y*I+j*A,H=r*N+i*U+b*I+m*A,X=c*N+f*U+l*I+h*A,_=u*N+O*U+p*I+x*A;return a[0]=v,a[1]=k,a[2]=W,a[3]=$,a[4]=B,a[5]=P,a[6]=Y,a[7]=D,a[8]=V,a[9]=Z,a[10]=J,a[11]=Q,a[12]=F,a[13]=H,a[14]=X,a[15]=_,a},y.add=function(t,e,a){return o["a"].typeOf.object("left",t),o["a"].typeOf.object("right",e),o["a"].typeOf.object("result",a),a[0]=t[0]+e[0],a[1]=t[1]+e[1],a[2]=t[2]+e[2],a[3]=t[3]+e[3],a[4]=t[4]+e[4],a[5]=t[5]+e[5],a[6]=t[6]+e[6],a[7]=t[7]+e[7],a[8]=t[8]+e[8],a[9]=t[9]+e[9],a[10]=t[10]+e[10],a[11]=t[11]+e[11],a[12]=t[12]+e[12],a[13]=t[13]+e[13],a[14]=t[14]+e[14],a[15]=t[15]+e[15],a},y.subtract=function(t,e,a){return o["a"].typeOf.object("left",t),o["a"].typeOf.object("right",e),o["a"].typeOf.object("result",a),a[0]=t[0]-e[0],a[1]=t[1]-e[1],a[2]=t[2]-e[2],a[3]=t[3]-e[3],a[4]=t[4]-e[4],a[5]=t[5]-e[5],a[6]=t[6]-e[6],a[7]=t[7]-e[7],a[8]=t[8]-e[8],a[9]=t[9]-e[9],a[10]=t[10]-e[10],a[11]=t[11]-e[11],a[12]=t[12]-e[12],a[13]=t[13]-e[13],a[14]=t[14]-e[14],a[15]=t[15]-e[15],a},y.multiplyTransformation=function(t,e,a){o["a"].typeOf.object("left",t),o["a"].typeOf.object("right",e),o["a"].typeOf.object("result",a);const n=t[0],r=t[1],c=t[2],u=t[4],s=t[5],i=t[6],f=t[8],O=t[9],y=t[10],b=t[12],l=t[13],p=t[14],j=e[0],m=e[1],h=e[2],x=e[4],g=e[5],d=e[6],w=e[8],M=e[9],E=e[10],z=e[12],T=e[13],q=e[14],R=n*j+u*m+f*h,S=r*j+s*m+O*h,C=c*j+i*m+y*h,L=n*x+u*g+f*d,N=r*x+s*g+O*d,U=c*x+i*g+y*d,I=n*w+u*M+f*E,A=r*w+s*M+O*E,v=c*w+i*M+y*E,k=n*z+u*T+f*q+b,W=r*z+s*T+O*q+l,$=c*z+i*T+y*q+p;return a[0]=R,a[1]=S,a[2]=C,a[3]=0,a[4]=L,a[5]=N,a[6]=U,a[7]=0,a[8]=I,a[9]=A,a[10]=v,a[11]=0,a[12]=k,a[13]=W,a[14]=$,a[15]=1,a},y.multiplyByMatrix3=function(t,e,a){o["a"].typeOf.object("matrix",t),o["a"].typeOf.object("rotation",e),o["a"].typeOf.object("result",a);const n=t[0],r=t[1],c=t[2],u=t[4],s=t[5],i=t[6],f=t[8],O=t[9],y=t[10],b=e[0],l=e[1],p=e[2],j=e[3],m=e[4],h=e[5],x=e[6],g=e[7],d=e[8],w=n*b+u*l+f*p,M=r*b+s*l+O*p,E=c*b+i*l+y*p,z=n*j+u*m+f*h,T=r*j+s*m+O*h,q=c*j+i*m+y*h,R=n*x+u*g+f*d,S=r*x+s*g+O*d,C=c*x+i*g+y*d;return a[0]=w,a[1]=M,a[2]=E,a[3]=0,a[4]=z,a[5]=T,a[6]=q,a[7]=0,a[8]=R,a[9]=S,a[10]=C,a[11]=0,a[12]=t[12],a[13]=t[13],a[14]=t[14],a[15]=t[15],a},y.multiplyByTranslation=function(t,e,a){o["a"].typeOf.object("matrix",t),o["a"].typeOf.object("translation",e),o["a"].typeOf.object("result",a);const n=e.x,r=e.y,c=e.z,u=n*t[0]+r*t[4]+c*t[8]+t[12],s=n*t[1]+r*t[5]+c*t[9]+t[13],i=n*t[2]+r*t[6]+c*t[10]+t[14];return a[0]=t[0],a[1]=t[1],a[2]=t[2],a[3]=t[3],a[4]=t[4],a[5]=t[5],a[6]=t[6],a[7]=t[7],a[8]=t[8],a[9]=t[9],a[10]=t[10],a[11]=t[11],a[12]=u,a[13]=s,a[14]=i,a[15]=t[15],a},y.multiplyByScale=function(t,e,a){o["a"].typeOf.object("matrix",t),o["a"].typeOf.object("scale",e),o["a"].typeOf.object("result",a);const n=e.x,r=e.y,c=e.z;return 1===n&&1===r&&1===c?y.clone(t,a):(a[0]=n*t[0],a[1]=n*t[1],a[2]=n*t[2],a[3]=t[3],a[4]=r*t[4],a[5]=r*t[5],a[6]=r*t[6],a[7]=t[7],a[8]=c*t[8],a[9]=c*t[9],a[10]=c*t[10],a[11]=t[11],a[12]=t[12],a[13]=t[13],a[14]=t[14],a[15]=t[15],a)},y.multiplyByUniformScale=function(t,e,a){return o["a"].typeOf.object("matrix",t),o["a"].typeOf.number("scale",e),o["a"].typeOf.object("result",a),a[0]=t[0]*e,a[1]=t[1]*e,a[2]=t[2]*e,a[3]=t[3],a[4]=t[4]*e,a[5]=t[5]*e,a[6]=t[6]*e,a[7]=t[7],a[8]=t[8]*e,a[9]=t[9]*e,a[10]=t[10]*e,a[11]=t[11],a[12]=t[12],a[13]=t[13],a[14]=t[14],a[15]=t[15],a},y.multiplyByVector=function(t,e,a){o["a"].typeOf.object("matrix",t),o["a"].typeOf.object("cartesian",e),o["a"].typeOf.object("result",a);const n=e.x,r=e.y,c=e.z,u=e.w,s=t[0]*n+t[4]*r+t[8]*c+t[12]*u,i=t[1]*n+t[5]*r+t[9]*c+t[13]*u,f=t[2]*n+t[6]*r+t[10]*c+t[14]*u,O=t[3]*n+t[7]*r+t[11]*c+t[15]*u;return a.x=s,a.y=i,a.z=f,a.w=O,a},y.multiplyByPointAsVector=function(t,e,a){o["a"].typeOf.object("matrix",t),o["a"].typeOf.object("cartesian",e),o["a"].typeOf.object("result",a);const n=e.x,r=e.y,c=e.z,u=t[0]*n+t[4]*r+t[8]*c,s=t[1]*n+t[5]*r+t[9]*c,i=t[2]*n+t[6]*r+t[10]*c;return a.x=u,a.y=s,a.z=i,a},y.multiplyByPoint=function(t,e,a){o["a"].typeOf.object("matrix",t),o["a"].typeOf.object("cartesian",e),o["a"].typeOf.object("result",a);const n=e.x,r=e.y,c=e.z,u=t[0]*n+t[4]*r+t[8]*c+t[12],s=t[1]*n+t[5]*r+t[9]*c+t[13],i=t[2]*n+t[6]*r+t[10]*c+t[14];return a.x=u,a.y=s,a.z=i,a},y.multiplyByScalar=function(t,e,a){return o["a"].typeOf.object("matrix",t),o["a"].typeOf.number("scalar",e),o["a"].typeOf.object("result",a),a[0]=t[0]*e,a[1]=t[1]*e,a[2]=t[2]*e,a[3]=t[3]*e,a[4]=t[4]*e,a[5]=t[5]*e,a[6]=t[6]*e,a[7]=t[7]*e,a[8]=t[8]*e,a[9]=t[9]*e,a[10]=t[10]*e,a[11]=t[11]*e,a[12]=t[12]*e,a[13]=t[13]*e,a[14]=t[14]*e,a[15]=t[15]*e,a},y.negate=function(t,e){return o["a"].typeOf.object("matrix",t),o["a"].typeOf.object("result",e),e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=-t[3],e[4]=-t[4],e[5]=-t[5],e[6]=-t[6],e[7]=-t[7],e[8]=-t[8],e[9]=-t[9],e[10]=-t[10],e[11]=-t[11],e[12]=-t[12],e[13]=-t[13],e[14]=-t[14],e[15]=-t[15],e},y.transpose=function(t,e){o["a"].typeOf.object("matrix",t),o["a"].typeOf.object("result",e);const a=t[1],n=t[2],r=t[3],c=t[6],u=t[7],s=t[11];return e[0]=t[0],e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=a,e[5]=t[5],e[6]=t[9],e[7]=t[13],e[8]=n,e[9]=c,e[10]=t[10],e[11]=t[14],e[12]=r,e[13]=u,e[14]=s,e[15]=t[15],e},y.abs=function(t,e){return o["a"].typeOf.object("matrix",t),o["a"].typeOf.object("result",e),e[0]=Math.abs(t[0]),e[1]=Math.abs(t[1]),e[2]=Math.abs(t[2]),e[3]=Math.abs(t[3]),e[4]=Math.abs(t[4]),e[5]=Math.abs(t[5]),e[6]=Math.abs(t[6]),e[7]=Math.abs(t[7]),e[8]=Math.abs(t[8]),e[9]=Math.abs(t[9]),e[10]=Math.abs(t[10]),e[11]=Math.abs(t[11]),e[12]=Math.abs(t[12]),e[13]=Math.abs(t[13]),e[14]=Math.abs(t[14]),e[15]=Math.abs(t[15]),e},y.equals=function(t,e){return t===e||Object(u["a"])(t)&&Object(u["a"])(e)&&t[12]===e[12]&&t[13]===e[13]&&t[14]===e[14]&&t[0]===e[0]&&t[1]===e[1]&&t[2]===e[2]&&t[4]===e[4]&&t[5]===e[5]&&t[6]===e[6]&&t[8]===e[8]&&t[9]===e[9]&&t[10]===e[10]&&t[3]===e[3]&&t[7]===e[7]&&t[11]===e[11]&&t[15]===e[15]},y.equalsEpsilon=function(t,e,a){return a=Object(c["a"])(a,0),t===e||Object(u["a"])(t)&&Object(u["a"])(e)&&Math.abs(t[0]-e[0])<=a&&Math.abs(t[1]-e[1])<=a&&Math.abs(t[2]-e[2])<=a&&Math.abs(t[3]-e[3])<=a&&Math.abs(t[4]-e[4])<=a&&Math.abs(t[5]-e[5])<=a&&Math.abs(t[6]-e[6])<=a&&Math.abs(t[7]-e[7])<=a&&Math.abs(t[8]-e[8])<=a&&Math.abs(t[9]-e[9])<=a&&Math.abs(t[10]-e[10])<=a&&Math.abs(t[11]-e[11])<=a&&Math.abs(t[12]-e[12])<=a&&Math.abs(t[13]-e[13])<=a&&Math.abs(t[14]-e[14])<=a&&Math.abs(t[15]-e[15])<=a},y.getTranslation=function(t,e){return o["a"].typeOf.object("matrix",t),o["a"].typeOf.object("result",e),e.x=t[12],e.y=t[13],e.z=t[14],e},y.getMatrix3=function(t,e){return o["a"].typeOf.object("matrix",t),o["a"].typeOf.object("result",e),e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[4],e[4]=t[5],e[5]=t[6],e[6]=t[8],e[7]=t[9],e[8]=t[10],e};const w=new f["a"],M=new f["a"],E=new r["a"],z=new r["a"](0,0,0,1);y.inverse=function(t,e){o["a"].typeOf.object("matrix",t),o["a"].typeOf.object("result",e);const a=t[0],n=t[4],c=t[8],u=t[12],s=t[1],b=t[5],l=t[9],p=t[13],j=t[2],m=t[6],h=t[10],x=t[14],g=t[3],d=t[7],T=t[11],q=t[15];let R=h*q,S=x*T,C=m*q,L=x*d,N=m*T,U=h*d,I=j*q,A=x*g,v=j*T,k=h*g,W=j*d,$=m*g;const B=R*b+L*l+N*p-(S*b+C*l+U*p),P=S*s+I*l+k*p-(R*s+A*l+v*p),Y=C*s+A*b+W*p-(L*s+I*b+$*p),D=U*s+v*b+$*l-(N*s+k*b+W*l),V=S*n+C*c+U*u-(R*n+L*c+N*u),Z=R*a+A*c+v*u-(S*a+I*c+k*u),J=L*a+I*n+$*u-(C*a+A*n+W*u),Q=N*a+k*n+W*c-(U*a+v*n+$*c);R=c*p,S=u*l,C=n*p,L=u*b,N=n*l,U=c*b,I=a*p,A=u*s,v=a*l,k=c*s,W=a*b,$=n*s;const F=R*d+L*T+N*q-(S*d+C*T+U*q),H=S*g+I*T+k*q-(R*g+A*T+v*q),X=C*g+A*d+W*q-(L*g+I*d+$*q),_=U*g+v*d+$*T-(N*g+k*d+W*T),G=C*h+U*x+S*m-(N*x+R*m+L*h),K=v*x+R*j+A*h-(I*h+k*x+S*j),tt=I*m+$*x+L*j-(W*x+C*j+A*m),et=W*h+N*j+k*m-(v*m+$*h+U*j);let at=a*B+n*P+c*Y+u*D;if(Math.abs(at)<i["a"].EPSILON21){if(f["a"].equalsEpsilon(y.getMatrix3(t,w),M,i["a"].EPSILON7)&&r["a"].equals(y.getRow(t,3,E),z))return e[0]=0,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=0,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=0,e[11]=0,e[12]=-t[12],e[13]=-t[13],e[14]=-t[14],e[15]=1,e;throw new O["a"]("matrix is not invertible because its determinate is zero.")}return at=1/at,e[0]=B*at,e[1]=P*at,e[2]=Y*at,e[3]=D*at,e[4]=V*at,e[5]=Z*at,e[6]=J*at,e[7]=Q*at,e[8]=F*at,e[9]=H*at,e[10]=X*at,e[11]=_*at,e[12]=G*at,e[13]=K*at,e[14]=tt*at,e[15]=et*at,e},y.inverseTransformation=function(t,e){o["a"].typeOf.object("matrix",t),o["a"].typeOf.object("result",e);const a=t[0],n=t[1],r=t[2],c=t[4],u=t[5],s=t[6],i=t[8],f=t[9],O=t[10],y=t[12],b=t[13],l=t[14],p=-a*y-n*b-r*l,j=-c*y-u*b-s*l,m=-i*y-f*b-O*l;return e[0]=a,e[1]=c,e[2]=i,e[3]=0,e[4]=n,e[5]=u,e[6]=f,e[7]=0,e[8]=r,e[9]=s,e[10]=O,e[11]=0,e[12]=p,e[13]=j,e[14]=m,e[15]=1,e};const T=new y;y.inverseTranspose=function(t,e){return o["a"].typeOf.object("matrix",t),o["a"].typeOf.object("result",e),y.inverse(y.transpose(t,T),e)},y.IDENTITY=Object.freeze(new y(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)),y.ZERO=Object.freeze(new y(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)),y.COLUMN0ROW0=0,y.COLUMN0ROW1=1,y.COLUMN0ROW2=2,y.COLUMN0ROW3=3,y.COLUMN1ROW0=4,y.COLUMN1ROW1=5,y.COLUMN1ROW2=6,y.COLUMN1ROW3=7,y.COLUMN2ROW0=8,y.COLUMN2ROW1=9,y.COLUMN2ROW2=10,y.COLUMN2ROW3=11,y.COLUMN3ROW0=12,y.COLUMN3ROW1=13,y.COLUMN3ROW2=14,y.COLUMN3ROW3=15,Object.defineProperties(y.prototype,{length:{get:function(){return y.packedLength}}}),y.prototype.clone=function(t){return y.clone(this,t)},y.prototype.equals=function(t){return y.equals(this,t)},y.equalsArray=function(t,e,a){return t[0]===e[a]&&t[1]===e[a+1]&&t[2]===e[a+2]&&t[3]===e[a+3]&&t[4]===e[a+4]&&t[5]===e[a+5]&&t[6]===e[a+6]&&t[7]===e[a+7]&&t[8]===e[a+8]&&t[9]===e[a+9]&&t[10]===e[a+10]&&t[11]===e[a+11]&&t[12]===e[a+12]&&t[13]===e[a+13]&&t[14]===e[a+14]&&t[15]===e[a+15]},y.prototype.equalsEpsilon=function(t,e){return y.equalsEpsilon(this,t,e)},y.prototype.toString=function(){return`(${this[0]}, ${this[4]}, ${this[8]}, ${this[12]})\n(${this[1]}, ${this[5]}, ${this[9]}, ${this[13]})\n(${this[2]}, ${this[6]}, ${this[10]}, ${this[14]})\n(${this[3]}, ${this[7]}, ${this[11]}, ${this[15]})`},e["a"]=y},d70f:function(t,e,a){"use strict";var n=a("85b2"),r=a("ae9b"),o=a("1a5d"),c=a("c937"),u=a("e2a6");function s(t,e,a,n){this[0]=Object(o["a"])(t,0),this[1]=Object(o["a"])(a,0),this[2]=Object(o["a"])(e,0),this[3]=Object(o["a"])(n,0)}s.packedLength=4,s.pack=function(t,e,a){return r["a"].typeOf.object("value",t),r["a"].defined("array",e),a=Object(o["a"])(a,0),e[a++]=t[0],e[a++]=t[1],e[a++]=t[2],e[a++]=t[3],e},s.unpack=function(t,e,a){return r["a"].defined("array",t),e=Object(o["a"])(e,0),Object(c["a"])(a)||(a=new s),a[0]=t[e++],a[1]=t[e++],a[2]=t[e++],a[3]=t[e++],a},s.packArray=function(t,e){r["a"].defined("array",t);const a=t.length,n=4*a;if(Object(c["a"])(e)){if(!Array.isArray(e)&&e.length!==n)throw new u["a"]("If result is a typed array, it must have exactly array.length * 4 elements");e.length!==n&&(e.length=n)}else e=new Array(n);for(let r=0;r<a;++r)s.pack(t[r],e,4*r);return e},s.unpackArray=function(t,e){if(r["a"].defined("array",t),r["a"].typeOf.number.greaterThanOrEquals("array.length",t.length,4),t.length%4!==0)throw new u["a"]("array length must be a multiple of 4.");const a=t.length;Object(c["a"])(e)?e.length=a/4:e=new Array(a/4);for(let n=0;n<a;n+=4){const a=n/4;e[a]=s.unpack(t,n,e[a])}return e},s.clone=function(t,e){if(Object(c["a"])(t))return Object(c["a"])(e)?(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e):new s(t[0],t[2],t[1],t[3])},s.fromArray=s.unpack,s.fromColumnMajorArray=function(t,e){return r["a"].defined("values",t),s.clone(t,e)},s.fromRowMajorArray=function(t,e){return r["a"].defined("values",t),Object(c["a"])(e)?(e[0]=t[0],e[1]=t[2],e[2]=t[1],e[3]=t[3],e):new s(t[0],t[1],t[2],t[3])},s.fromScale=function(t,e){return r["a"].typeOf.object("scale",t),Object(c["a"])(e)?(e[0]=t.x,e[1]=0,e[2]=0,e[3]=t.y,e):new s(t.x,0,0,t.y)},s.fromUniformScale=function(t,e){return r["a"].typeOf.number("scale",t),Object(c["a"])(e)?(e[0]=t,e[1]=0,e[2]=0,e[3]=t,e):new s(t,0,0,t)},s.fromRotation=function(t,e){r["a"].typeOf.number("angle",t);const a=Math.cos(t),n=Math.sin(t);return Object(c["a"])(e)?(e[0]=a,e[1]=n,e[2]=-n,e[3]=a,e):new s(a,-n,n,a)},s.toArray=function(t,e){return r["a"].typeOf.object("matrix",t),Object(c["a"])(e)?(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e):[t[0],t[1],t[2],t[3]]},s.getElementIndex=function(t,e){return r["a"].typeOf.number.greaterThanOrEquals("row",e,0),r["a"].typeOf.number.lessThanOrEquals("row",e,1),r["a"].typeOf.number.greaterThanOrEquals("column",t,0),r["a"].typeOf.number.lessThanOrEquals("column",t,1),2*t+e},s.getColumn=function(t,e,a){r["a"].typeOf.object("matrix",t),r["a"].typeOf.number.greaterThanOrEquals("index",e,0),r["a"].typeOf.number.lessThanOrEquals("index",e,1),r["a"].typeOf.object("result",a);const n=2*e,o=t[n],c=t[n+1];return a.x=o,a.y=c,a},s.setColumn=function(t,e,a,n){r["a"].typeOf.object("matrix",t),r["a"].typeOf.number.greaterThanOrEquals("index",e,0),r["a"].typeOf.number.lessThanOrEquals("index",e,1),r["a"].typeOf.object("cartesian",a),r["a"].typeOf.object("result",n),n=s.clone(t,n);const o=2*e;return n[o]=a.x,n[o+1]=a.y,n},s.getRow=function(t,e,a){r["a"].typeOf.object("matrix",t),r["a"].typeOf.number.greaterThanOrEquals("index",e,0),r["a"].typeOf.number.lessThanOrEquals("index",e,1),r["a"].typeOf.object("result",a);const n=t[e],o=t[e+2];return a.x=n,a.y=o,a},s.setRow=function(t,e,a,n){return r["a"].typeOf.object("matrix",t),r["a"].typeOf.number.greaterThanOrEquals("index",e,0),r["a"].typeOf.number.lessThanOrEquals("index",e,1),r["a"].typeOf.object("cartesian",a),r["a"].typeOf.object("result",n),n=s.clone(t,n),n[e]=a.x,n[e+2]=a.y,n};const i=new n["a"];s.setScale=function(t,e,a){r["a"].typeOf.object("matrix",t),r["a"].typeOf.object("scale",e),r["a"].typeOf.object("result",a);const n=s.getScale(t,i),o=e.x/n.x,c=e.y/n.y;return a[0]=t[0]*o,a[1]=t[1]*o,a[2]=t[2]*c,a[3]=t[3]*c,a};const f=new n["a"];s.setUniformScale=function(t,e,a){r["a"].typeOf.object("matrix",t),r["a"].typeOf.number("scale",e),r["a"].typeOf.object("result",a);const n=s.getScale(t,f),o=e/n.x,c=e/n.y;return a[0]=t[0]*o,a[1]=t[1]*o,a[2]=t[2]*c,a[3]=t[3]*c,a};const O=new n["a"];s.getScale=function(t,e){return r["a"].typeOf.object("matrix",t),r["a"].typeOf.object("result",e),e.x=n["a"].magnitude(n["a"].fromElements(t[0],t[1],O)),e.y=n["a"].magnitude(n["a"].fromElements(t[2],t[3],O)),e};const y=new n["a"];s.getMaximumScale=function(t){return s.getScale(t,y),n["a"].maximumComponent(y)};const b=new n["a"];s.setRotation=function(t,e,a){r["a"].typeOf.object("matrix",t),r["a"].typeOf.object("result",a);const n=s.getScale(t,b);return a[0]=e[0]*n.x,a[1]=e[1]*n.x,a[2]=e[2]*n.y,a[3]=e[3]*n.y,a};const l=new n["a"];s.getRotation=function(t,e){r["a"].typeOf.object("matrix",t),r["a"].typeOf.object("result",e);const a=s.getScale(t,l);return e[0]=t[0]/a.x,e[1]=t[1]/a.x,e[2]=t[2]/a.y,e[3]=t[3]/a.y,e},s.multiply=function(t,e,a){r["a"].typeOf.object("left",t),r["a"].typeOf.object("right",e),r["a"].typeOf.object("result",a);const n=t[0]*e[0]+t[2]*e[1],o=t[0]*e[2]+t[2]*e[3],c=t[1]*e[0]+t[3]*e[1],u=t[1]*e[2]+t[3]*e[3];return a[0]=n,a[1]=c,a[2]=o,a[3]=u,a},s.add=function(t,e,a){return r["a"].typeOf.object("left",t),r["a"].typeOf.object("right",e),r["a"].typeOf.object("result",a),a[0]=t[0]+e[0],a[1]=t[1]+e[1],a[2]=t[2]+e[2],a[3]=t[3]+e[3],a},s.subtract=function(t,e,a){return r["a"].typeOf.object("left",t),r["a"].typeOf.object("right",e),r["a"].typeOf.object("result",a),a[0]=t[0]-e[0],a[1]=t[1]-e[1],a[2]=t[2]-e[2],a[3]=t[3]-e[3],a},s.multiplyByVector=function(t,e,a){r["a"].typeOf.object("matrix",t),r["a"].typeOf.object("cartesian",e),r["a"].typeOf.object("result",a);const n=t[0]*e.x+t[2]*e.y,o=t[1]*e.x+t[3]*e.y;return a.x=n,a.y=o,a},s.multiplyByScalar=function(t,e,a){return r["a"].typeOf.object("matrix",t),r["a"].typeOf.number("scalar",e),r["a"].typeOf.object("result",a),a[0]=t[0]*e,a[1]=t[1]*e,a[2]=t[2]*e,a[3]=t[3]*e,a},s.multiplyByScale=function(t,e,a){return r["a"].typeOf.object("matrix",t),r["a"].typeOf.object("scale",e),r["a"].typeOf.object("result",a),a[0]=t[0]*e.x,a[1]=t[1]*e.x,a[2]=t[2]*e.y,a[3]=t[3]*e.y,a},s.multiplyByUniformScale=function(t,e,a){return r["a"].typeOf.object("matrix",t),r["a"].typeOf.number("scale",e),r["a"].typeOf.object("result",a),a[0]=t[0]*e,a[1]=t[1]*e,a[2]=t[2]*e,a[3]=t[3]*e,a},s.negate=function(t,e){return r["a"].typeOf.object("matrix",t),r["a"].typeOf.object("result",e),e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=-t[3],e},s.transpose=function(t,e){r["a"].typeOf.object("matrix",t),r["a"].typeOf.object("result",e);const a=t[0],n=t[2],o=t[1],c=t[3];return e[0]=a,e[1]=n,e[2]=o,e[3]=c,e},s.abs=function(t,e){return r["a"].typeOf.object("matrix",t),r["a"].typeOf.object("result",e),e[0]=Math.abs(t[0]),e[1]=Math.abs(t[1]),e[2]=Math.abs(t[2]),e[3]=Math.abs(t[3]),e},s.equals=function(t,e){return t===e||Object(c["a"])(t)&&Object(c["a"])(e)&&t[0]===e[0]&&t[1]===e[1]&&t[2]===e[2]&&t[3]===e[3]},s.equalsArray=function(t,e,a){return t[0]===e[a]&&t[1]===e[a+1]&&t[2]===e[a+2]&&t[3]===e[a+3]},s.equalsEpsilon=function(t,e,a){return a=Object(o["a"])(a,0),t===e||Object(c["a"])(t)&&Object(c["a"])(e)&&Math.abs(t[0]-e[0])<=a&&Math.abs(t[1]-e[1])<=a&&Math.abs(t[2]-e[2])<=a&&Math.abs(t[3]-e[3])<=a},s.IDENTITY=Object.freeze(new s(1,0,0,1)),s.ZERO=Object.freeze(new s(0,0,0,0)),s.COLUMN0ROW0=0,s.COLUMN0ROW1=1,s.COLUMN1ROW0=2,s.COLUMN1ROW1=3,Object.defineProperties(s.prototype,{length:{get:function(){return s.packedLength}}}),s.prototype.clone=function(t){return s.clone(this,t)},s.prototype.equals=function(t){return s.equals(this,t)},s.prototype.equalsEpsilon=function(t,e){return s.equalsEpsilon(this,t,e)},s.prototype.toString=function(){return`(${this[0]}, ${this[2]})\n(${this[1]}, ${this[3]})`},e["a"]=s},d767:function(t,e,a){"use strict";var n=a("dde0"),r=a("ae9b"),o=a("1a5d"),c=a("c937"),u=a("e2a6"),s=a("b8b5");function i(t,e,a,n,r,c,u,s,i){this[0]=Object(o["a"])(t,0),this[1]=Object(o["a"])(n,0),this[2]=Object(o["a"])(u,0),this[3]=Object(o["a"])(e,0),this[4]=Object(o["a"])(r,0),this[5]=Object(o["a"])(s,0),this[6]=Object(o["a"])(a,0),this[7]=Object(o["a"])(c,0),this[8]=Object(o["a"])(i,0)}i.packedLength=9,i.pack=function(t,e,a){return r["a"].typeOf.object("value",t),r["a"].defined("array",e),a=Object(o["a"])(a,0),e[a++]=t[0],e[a++]=t[1],e[a++]=t[2],e[a++]=t[3],e[a++]=t[4],e[a++]=t[5],e[a++]=t[6],e[a++]=t[7],e[a++]=t[8],e},i.unpack=function(t,e,a){return r["a"].defined("array",t),e=Object(o["a"])(e,0),Object(c["a"])(a)||(a=new i),a[0]=t[e++],a[1]=t[e++],a[2]=t[e++],a[3]=t[e++],a[4]=t[e++],a[5]=t[e++],a[6]=t[e++],a[7]=t[e++],a[8]=t[e++],a},i.packArray=function(t,e){r["a"].defined("array",t);const a=t.length,n=9*a;if(Object(c["a"])(e)){if(!Array.isArray(e)&&e.length!==n)throw new u["a"]("If result is a typed array, it must have exactly array.length * 9 elements");e.length!==n&&(e.length=n)}else e=new Array(n);for(let r=0;r<a;++r)i.pack(t[r],e,9*r);return e},i.unpackArray=function(t,e){if(r["a"].defined("array",t),r["a"].typeOf.number.greaterThanOrEquals("array.length",t.length,9),t.length%9!==0)throw new u["a"]("array length must be a multiple of 9.");const a=t.length;Object(c["a"])(e)?e.length=a/9:e=new Array(a/9);for(let n=0;n<a;n+=9){const a=n/9;e[a]=i.unpack(t,n,e[a])}return e},i.clone=function(t,e){if(Object(c["a"])(t))return Object(c["a"])(e)?(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e):new i(t[0],t[3],t[6],t[1],t[4],t[7],t[2],t[5],t[8])},i.fromArray=i.unpack,i.fromColumnMajorArray=function(t,e){return r["a"].defined("values",t),i.clone(t,e)},i.fromRowMajorArray=function(t,e){return r["a"].defined("values",t),Object(c["a"])(e)?(e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],e):new i(t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8])},i.fromQuaternion=function(t,e){r["a"].typeOf.object("quaternion",t);const a=t.x*t.x,n=t.x*t.y,o=t.x*t.z,u=t.x*t.w,s=t.y*t.y,f=t.y*t.z,O=t.y*t.w,y=t.z*t.z,b=t.z*t.w,l=t.w*t.w,p=a-s-y+l,j=2*(n-b),m=2*(o+O),h=2*(n+b),x=-a+s-y+l,g=2*(f-u),d=2*(o-O),w=2*(f+u),M=-a-s+y+l;return Object(c["a"])(e)?(e[0]=p,e[1]=h,e[2]=d,e[3]=j,e[4]=x,e[5]=w,e[6]=m,e[7]=g,e[8]=M,e):new i(p,j,m,h,x,g,d,w,M)},i.fromHeadingPitchRoll=function(t,e){r["a"].typeOf.object("headingPitchRoll",t);const a=Math.cos(-t.pitch),n=Math.cos(-t.heading),o=Math.cos(t.roll),u=Math.sin(-t.pitch),s=Math.sin(-t.heading),f=Math.sin(t.roll),O=a*n,y=-o*s+f*u*n,b=f*s+o*u*n,l=a*s,p=o*n+f*u*s,j=-f*n+o*u*s,m=-u,h=f*a,x=o*a;return Object(c["a"])(e)?(e[0]=O,e[1]=l,e[2]=m,e[3]=y,e[4]=p,e[5]=h,e[6]=b,e[7]=j,e[8]=x,e):new i(O,y,b,l,p,j,m,h,x)},i.fromScale=function(t,e){return r["a"].typeOf.object("scale",t),Object(c["a"])(e)?(e[0]=t.x,e[1]=0,e[2]=0,e[3]=0,e[4]=t.y,e[5]=0,e[6]=0,e[7]=0,e[8]=t.z,e):new i(t.x,0,0,0,t.y,0,0,0,t.z)},i.fromUniformScale=function(t,e){return r["a"].typeOf.number("scale",t),Object(c["a"])(e)?(e[0]=t,e[1]=0,e[2]=0,e[3]=0,e[4]=t,e[5]=0,e[6]=0,e[7]=0,e[8]=t,e):new i(t,0,0,0,t,0,0,0,t)},i.fromCrossProduct=function(t,e){return r["a"].typeOf.object("vector",t),Object(c["a"])(e)?(e[0]=0,e[1]=t.z,e[2]=-t.y,e[3]=-t.z,e[4]=0,e[5]=t.x,e[6]=t.y,e[7]=-t.x,e[8]=0,e):new i(0,-t.z,t.y,t.z,0,-t.x,-t.y,t.x,0)},i.fromRotationX=function(t,e){r["a"].typeOf.number("angle",t);const a=Math.cos(t),n=Math.sin(t);return Object(c["a"])(e)?(e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=a,e[5]=n,e[6]=0,e[7]=-n,e[8]=a,e):new i(1,0,0,0,a,-n,0,n,a)},i.fromRotationY=function(t,e){r["a"].typeOf.number("angle",t);const a=Math.cos(t),n=Math.sin(t);return Object(c["a"])(e)?(e[0]=a,e[1]=0,e[2]=-n,e[3]=0,e[4]=1,e[5]=0,e[6]=n,e[7]=0,e[8]=a,e):new i(a,0,n,0,1,0,-n,0,a)},i.fromRotationZ=function(t,e){r["a"].typeOf.number("angle",t);const a=Math.cos(t),n=Math.sin(t);return Object(c["a"])(e)?(e[0]=a,e[1]=n,e[2]=0,e[3]=-n,e[4]=a,e[5]=0,e[6]=0,e[7]=0,e[8]=1,e):new i(a,-n,0,n,a,0,0,0,1)},i.toArray=function(t,e){return r["a"].typeOf.object("matrix",t),Object(c["a"])(e)?(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e):[t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8]]},i.getElementIndex=function(t,e){return r["a"].typeOf.number.greaterThanOrEquals("row",e,0),r["a"].typeOf.number.lessThanOrEquals("row",e,2),r["a"].typeOf.number.greaterThanOrEquals("column",t,0),r["a"].typeOf.number.lessThanOrEquals("column",t,2),3*t+e},i.getColumn=function(t,e,a){r["a"].typeOf.object("matrix",t),r["a"].typeOf.number.greaterThanOrEquals("index",e,0),r["a"].typeOf.number.lessThanOrEquals("index",e,2),r["a"].typeOf.object("result",a);const n=3*e,o=t[n],c=t[n+1],u=t[n+2];return a.x=o,a.y=c,a.z=u,a},i.setColumn=function(t,e,a,n){r["a"].typeOf.object("matrix",t),r["a"].typeOf.number.greaterThanOrEquals("index",e,0),r["a"].typeOf.number.lessThanOrEquals("index",e,2),r["a"].typeOf.object("cartesian",a),r["a"].typeOf.object("result",n),n=i.clone(t,n);const o=3*e;return n[o]=a.x,n[o+1]=a.y,n[o+2]=a.z,n},i.getRow=function(t,e,a){r["a"].typeOf.object("matrix",t),r["a"].typeOf.number.greaterThanOrEquals("index",e,0),r["a"].typeOf.number.lessThanOrEquals("index",e,2),r["a"].typeOf.object("result",a);const n=t[e],o=t[e+3],c=t[e+6];return a.x=n,a.y=o,a.z=c,a},i.setRow=function(t,e,a,n){return r["a"].typeOf.object("matrix",t),r["a"].typeOf.number.greaterThanOrEquals("index",e,0),r["a"].typeOf.number.lessThanOrEquals("index",e,2),r["a"].typeOf.object("cartesian",a),r["a"].typeOf.object("result",n),n=i.clone(t,n),n[e]=a.x,n[e+3]=a.y,n[e+6]=a.z,n};const f=new n["a"];i.setScale=function(t,e,a){r["a"].typeOf.object("matrix",t),r["a"].typeOf.object("scale",e),r["a"].typeOf.object("result",a);const n=i.getScale(t,f),o=e.x/n.x,c=e.y/n.y,u=e.z/n.z;return a[0]=t[0]*o,a[1]=t[1]*o,a[2]=t[2]*o,a[3]=t[3]*c,a[4]=t[4]*c,a[5]=t[5]*c,a[6]=t[6]*u,a[7]=t[7]*u,a[8]=t[8]*u,a};const O=new n["a"];i.setUniformScale=function(t,e,a){r["a"].typeOf.object("matrix",t),r["a"].typeOf.number("scale",e),r["a"].typeOf.object("result",a);const n=i.getScale(t,O),o=e/n.x,c=e/n.y,u=e/n.z;return a[0]=t[0]*o,a[1]=t[1]*o,a[2]=t[2]*o,a[3]=t[3]*c,a[4]=t[4]*c,a[5]=t[5]*c,a[6]=t[6]*u,a[7]=t[7]*u,a[8]=t[8]*u,a};const y=new n["a"];i.getScale=function(t,e){return r["a"].typeOf.object("matrix",t),r["a"].typeOf.object("result",e),e.x=n["a"].magnitude(n["a"].fromElements(t[0],t[1],t[2],y)),e.y=n["a"].magnitude(n["a"].fromElements(t[3],t[4],t[5],y)),e.z=n["a"].magnitude(n["a"].fromElements(t[6],t[7],t[8],y)),e};const b=new n["a"];i.getMaximumScale=function(t){return i.getScale(t,b),n["a"].maximumComponent(b)};const l=new n["a"];i.setRotation=function(t,e,a){r["a"].typeOf.object("matrix",t),r["a"].typeOf.object("result",a);const n=i.getScale(t,l);return a[0]=e[0]*n.x,a[1]=e[1]*n.x,a[2]=e[2]*n.x,a[3]=e[3]*n.y,a[4]=e[4]*n.y,a[5]=e[5]*n.y,a[6]=e[6]*n.z,a[7]=e[7]*n.z,a[8]=e[8]*n.z,a};const p=new n["a"];function j(t){let e=0;for(let a=0;a<9;++a){const n=t[a];e+=n*n}return Math.sqrt(e)}i.getRotation=function(t,e){r["a"].typeOf.object("matrix",t),r["a"].typeOf.object("result",e);const a=i.getScale(t,p);return e[0]=t[0]/a.x,e[1]=t[1]/a.x,e[2]=t[2]/a.x,e[3]=t[3]/a.y,e[4]=t[4]/a.y,e[5]=t[5]/a.y,e[6]=t[6]/a.z,e[7]=t[7]/a.z,e[8]=t[8]/a.z,e},i.multiply=function(t,e,a){r["a"].typeOf.object("left",t),r["a"].typeOf.object("right",e),r["a"].typeOf.object("result",a);const n=t[0]*e[0]+t[3]*e[1]+t[6]*e[2],o=t[1]*e[0]+t[4]*e[1]+t[7]*e[2],c=t[2]*e[0]+t[5]*e[1]+t[8]*e[2],u=t[0]*e[3]+t[3]*e[4]+t[6]*e[5],s=t[1]*e[3]+t[4]*e[4]+t[7]*e[5],i=t[2]*e[3]+t[5]*e[4]+t[8]*e[5],f=t[0]*e[6]+t[3]*e[7]+t[6]*e[8],O=t[1]*e[6]+t[4]*e[7]+t[7]*e[8],y=t[2]*e[6]+t[5]*e[7]+t[8]*e[8];return a[0]=n,a[1]=o,a[2]=c,a[3]=u,a[4]=s,a[5]=i,a[6]=f,a[7]=O,a[8]=y,a},i.add=function(t,e,a){return r["a"].typeOf.object("left",t),r["a"].typeOf.object("right",e),r["a"].typeOf.object("result",a),a[0]=t[0]+e[0],a[1]=t[1]+e[1],a[2]=t[2]+e[2],a[3]=t[3]+e[3],a[4]=t[4]+e[4],a[5]=t[5]+e[5],a[6]=t[6]+e[6],a[7]=t[7]+e[7],a[8]=t[8]+e[8],a},i.subtract=function(t,e,a){return r["a"].typeOf.object("left",t),r["a"].typeOf.object("right",e),r["a"].typeOf.object("result",a),a[0]=t[0]-e[0],a[1]=t[1]-e[1],a[2]=t[2]-e[2],a[3]=t[3]-e[3],a[4]=t[4]-e[4],a[5]=t[5]-e[5],a[6]=t[6]-e[6],a[7]=t[7]-e[7],a[8]=t[8]-e[8],a},i.multiplyByVector=function(t,e,a){r["a"].typeOf.object("matrix",t),r["a"].typeOf.object("cartesian",e),r["a"].typeOf.object("result",a);const n=e.x,o=e.y,c=e.z,u=t[0]*n+t[3]*o+t[6]*c,s=t[1]*n+t[4]*o+t[7]*c,i=t[2]*n+t[5]*o+t[8]*c;return a.x=u,a.y=s,a.z=i,a},i.multiplyByScalar=function(t,e,a){return r["a"].typeOf.object("matrix",t),r["a"].typeOf.number("scalar",e),r["a"].typeOf.object("result",a),a[0]=t[0]*e,a[1]=t[1]*e,a[2]=t[2]*e,a[3]=t[3]*e,a[4]=t[4]*e,a[5]=t[5]*e,a[6]=t[6]*e,a[7]=t[7]*e,a[8]=t[8]*e,a},i.multiplyByScale=function(t,e,a){return r["a"].typeOf.object("matrix",t),r["a"].typeOf.object("scale",e),r["a"].typeOf.object("result",a),a[0]=t[0]*e.x,a[1]=t[1]*e.x,a[2]=t[2]*e.x,a[3]=t[3]*e.y,a[4]=t[4]*e.y,a[5]=t[5]*e.y,a[6]=t[6]*e.z,a[7]=t[7]*e.z,a[8]=t[8]*e.z,a},i.multiplyByUniformScale=function(t,e,a){return r["a"].typeOf.object("matrix",t),r["a"].typeOf.number("scale",e),r["a"].typeOf.object("result",a),a[0]=t[0]*e,a[1]=t[1]*e,a[2]=t[2]*e,a[3]=t[3]*e,a[4]=t[4]*e,a[5]=t[5]*e,a[6]=t[6]*e,a[7]=t[7]*e,a[8]=t[8]*e,a},i.negate=function(t,e){return r["a"].typeOf.object("matrix",t),r["a"].typeOf.object("result",e),e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=-t[3],e[4]=-t[4],e[5]=-t[5],e[6]=-t[6],e[7]=-t[7],e[8]=-t[8],e},i.transpose=function(t,e){r["a"].typeOf.object("matrix",t),r["a"].typeOf.object("result",e);const a=t[0],n=t[3],o=t[6],c=t[1],u=t[4],s=t[7],i=t[2],f=t[5],O=t[8];return e[0]=a,e[1]=n,e[2]=o,e[3]=c,e[4]=u,e[5]=s,e[6]=i,e[7]=f,e[8]=O,e};const m=[1,0,0],h=[2,2,1];function x(t){let e=0;for(let a=0;a<3;++a){const n=t[i.getElementIndex(h[a],m[a])];e+=2*n*n}return Math.sqrt(e)}function g(t,e){const a=s["a"].EPSILON15;let n=0,r=1;for(let s=0;s<3;++s){const e=Math.abs(t[i.getElementIndex(h[s],m[s])]);e>n&&(r=s,n=e)}let o=1,c=0;const u=m[r],f=h[r];if(Math.abs(t[i.getElementIndex(f,u)])>a){const e=t[i.getElementIndex(f,f)],a=t[i.getElementIndex(u,u)],n=t[i.getElementIndex(f,u)],r=(e-a)/2/n;let s;s=r<0?-1/(-r+Math.sqrt(1+r*r)):1/(r+Math.sqrt(1+r*r)),o=1/Math.sqrt(1+s*s),c=s*o}return e=i.clone(i.IDENTITY,e),e[i.getElementIndex(u,u)]=e[i.getElementIndex(f,f)]=o,e[i.getElementIndex(f,u)]=c,e[i.getElementIndex(u,f)]=-c,e}const d=new i,w=new i;i.computeEigenDecomposition=function(t,e){r["a"].typeOf.object("matrix",t);const a=s["a"].EPSILON20,n=10;let o=0,u=0;Object(c["a"])(e)||(e={});const f=e.unitary=i.clone(i.IDENTITY,e.unitary),O=e.diagonal=i.clone(t,e.diagonal),y=a*j(O);while(u<n&&x(O)>y)g(O,d),i.transpose(d,w),i.multiply(O,d,O),i.multiply(w,O,O),i.multiply(f,d,f),++o>2&&(++u,o=0);return e},i.abs=function(t,e){return r["a"].typeOf.object("matrix",t),r["a"].typeOf.object("result",e),e[0]=Math.abs(t[0]),e[1]=Math.abs(t[1]),e[2]=Math.abs(t[2]),e[3]=Math.abs(t[3]),e[4]=Math.abs(t[4]),e[5]=Math.abs(t[5]),e[6]=Math.abs(t[6]),e[7]=Math.abs(t[7]),e[8]=Math.abs(t[8]),e},i.determinant=function(t){r["a"].typeOf.object("matrix",t);const e=t[0],a=t[3],n=t[6],o=t[1],c=t[4],u=t[7],s=t[2],i=t[5],f=t[8];return e*(c*f-i*u)+o*(i*n-a*f)+s*(a*u-c*n)},i.inverse=function(t,e){r["a"].typeOf.object("matrix",t),r["a"].typeOf.object("result",e);const a=t[0],n=t[1],o=t[2],c=t[3],f=t[4],O=t[5],y=t[6],b=t[7],l=t[8],p=i.determinant(t);if(Math.abs(p)<=s["a"].EPSILON15)throw new u["a"]("matrix is not invertible");e[0]=f*l-b*O,e[1]=b*o-n*l,e[2]=n*O-f*o,e[3]=y*O-c*l,e[4]=a*l-y*o,e[5]=c*o-a*O,e[6]=c*b-y*f,e[7]=y*n-a*b,e[8]=a*f-c*n;const j=1/p;return i.multiplyByScalar(e,j,e)};const M=new i;i.inverseTranspose=function(t,e){return r["a"].typeOf.object("matrix",t),r["a"].typeOf.object("result",e),i.inverse(i.transpose(t,M),e)},i.equals=function(t,e){return t===e||Object(c["a"])(t)&&Object(c["a"])(e)&&t[0]===e[0]&&t[1]===e[1]&&t[2]===e[2]&&t[3]===e[3]&&t[4]===e[4]&&t[5]===e[5]&&t[6]===e[6]&&t[7]===e[7]&&t[8]===e[8]},i.equalsEpsilon=function(t,e,a){return a=Object(o["a"])(a,0),t===e||Object(c["a"])(t)&&Object(c["a"])(e)&&Math.abs(t[0]-e[0])<=a&&Math.abs(t[1]-e[1])<=a&&Math.abs(t[2]-e[2])<=a&&Math.abs(t[3]-e[3])<=a&&Math.abs(t[4]-e[4])<=a&&Math.abs(t[5]-e[5])<=a&&Math.abs(t[6]-e[6])<=a&&Math.abs(t[7]-e[7])<=a&&Math.abs(t[8]-e[8])<=a},i.IDENTITY=Object.freeze(new i(1,0,0,0,1,0,0,0,1)),i.ZERO=Object.freeze(new i(0,0,0,0,0,0,0,0,0)),i.COLUMN0ROW0=0,i.COLUMN0ROW1=1,i.COLUMN0ROW2=2,i.COLUMN1ROW0=3,i.COLUMN1ROW1=4,i.COLUMN1ROW2=5,i.COLUMN2ROW0=6,i.COLUMN2ROW1=7,i.COLUMN2ROW2=8,Object.defineProperties(i.prototype,{length:{get:function(){return i.packedLength}}}),i.prototype.clone=function(t){return i.clone(this,t)},i.prototype.equals=function(t){return i.equals(this,t)},i.equalsArray=function(t,e,a){return t[0]===e[a]&&t[1]===e[a+1]&&t[2]===e[a+2]&&t[3]===e[a+3]&&t[4]===e[a+4]&&t[5]===e[a+5]&&t[6]===e[a+6]&&t[7]===e[a+7]&&t[8]===e[a+8]},i.prototype.equalsEpsilon=function(t,e){return i.equalsEpsilon(this,t,e)},i.prototype.toString=function(){return`(${this[0]}, ${this[3]}, ${this[6]})\n(${this[1]}, ${this[4]}, ${this[7]})\n(${this[2]}, ${this[5]}, ${this[8]})`},e["a"]=i}}]);